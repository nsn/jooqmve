/*
 * This file is generated by jOOQ.
*/
package com.nightspawn.jooq.pgsqlcustomtype.generated.udt.records;


import com.nightspawn.jooq.pgsqlcustomtype.generated.udt.MyCustomType;

import javax.annotation.Generated;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MyCustomTypeRecord extends UDTRecordImpl<MyCustomTypeRecord> implements Record2<String, Long> {

    private static final long serialVersionUID = -141725519;

    /**
     * Setter for <code>public.my_custom_type.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.my_custom_type.name</code>.
     */
    @Size(max = 255)
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.my_custom_type.count</code>.
     */
    public void setCount(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.my_custom_type.count</code>.
     */
    public Long getCount() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return MyCustomType.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return MyCustomType.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MyCustomTypeRecord value1(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MyCustomTypeRecord value2(Long value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MyCustomTypeRecord values(String value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MyCustomTypeRecord
     */
    public MyCustomTypeRecord() {
        super(MyCustomType.MY_CUSTOM_TYPE);
    }

    /**
     * Create a detached, initialised MyCustomTypeRecord
     */
    public MyCustomTypeRecord(String name, Long count) {
        super(MyCustomType.MY_CUSTOM_TYPE);

        set(0, name);
        set(1, count);
    }
}
